import requests
import time
import os
from urllib.parse import urlparse

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_KEY = "gen-api key"
NETWORK_ID = "dalle-3"
API_BASE = "https://api.gen-api.ru/api/v1"
OUTPUT_FOLDER = "comic_images"

os.makedirs(OUTPUT_FOLDER, exist_ok=True)

headers = {
    "Authorization": f"Bearer {API_KEY}",
    "Content-Type": "application/json"
}


def save_image_from_url(image_url, filename):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ URL"""
    try:
        response = requests.get(image_url)
        response.raise_for_status()

        file_extension = ".png"
        full_filename = f"{filename}{file_extension}"
        filepath = os.path.join(OUTPUT_FOLDER, full_filename)

        with open(filepath, 'wb') as f:
            f.write(response.content)

        print(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {filepath}")
        return filepath
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        return None


def generate_comic_frame(prompt, frame_number):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –∫–∞–¥—Ä –∫–æ–º–∏–∫—Å–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é"""
    print(f"\nüé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–∞–¥—Ä {frame_number}...")
    print(f"üìù –ü—Ä–æ–º–ø—Ç: {prompt}")

    generation_url = f"{API_BASE}/networks/{NETWORK_ID}"
    generation_data = {"prompt": prompt}

    try:
        gen_response = requests.post(generation_url, json=generation_data, headers=headers, timeout=30)

        if gen_response.status_code == 200:
            gen_result = gen_response.json()
            request_id = gen_result.get("request_id")

            if request_id:
                print(f"‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞. request_id: {request_id}")

                # –û–∂–∏–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                status_url = f"{API_BASE}/request/get/{request_id}"

                for attempt in range(1, 31):
                    print(f"‚è≥ –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å... (–ø–æ–ø—ã—Ç–∫–∞ {attempt}/30)")
                    status_response = requests.get(status_url, headers=headers)

                    if status_response.status_code == 200:
                        status_result = status_response.json()
                        current_status = status_result.get("status")

                        if current_status == "success":
                            print(f"‚úÖ –ö–∞–¥—Ä {frame_number} —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")

                            # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: URL –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–æ–ª–µ 'result', –∞ –Ω–µ 'output'
                            image_urls = status_result.get("result", [])

                            if image_urls and isinstance(image_urls, list) and len(image_urls) > 0:
                                image_url = image_urls[0]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é —Å—Å—ã–ª–∫—É –∏–∑ –º–∞—Å—Å–∏–≤–∞

                                if image_url and image_url.startswith('http'):
                                    print(f"üì∏ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_url}")

                                    # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
                                    timestamp = int(time.time())
                                    filename = f"comic_frame_{frame_number}_{timestamp}"
                                    saved_path = save_image_from_url(image_url, filename)

                                    if saved_path:
                                        print(f"üéâ –ö–∞–¥—Ä {frame_number} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
                                        return saved_path
                                    else:
                                        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–¥—Ä {frame_number}")
                                        return None
                                else:
                                    print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL: {image_url}")
                                    return None
                            else:
                                print(f"‚ùå –ú–∞—Å—Å–∏–≤ result –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç URL-–æ–≤: {image_urls}")
                                return None

                        elif current_status == "processing":
                            print(f"üîÑ –ö–∞–¥—Ä {frame_number} –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ, –∂–¥—É 10 —Å–µ–∫—É–Ω–¥...")
                            time.sleep(10)
                        elif current_status in ["failed", "error"]:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞–¥—Ä–∞ {frame_number}: {status_result}")
                            return None
                        else:
                            print(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –∫–∞–¥—Ä–∞ {frame_number}: {current_status}")
                            time.sleep(10)
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {status_response.status_code}")
                        return None

                print(f"‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –∫–∞–¥—Ä–∞ {frame_number}")
                return None
            else:
                print(f"‚ùå request_id –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫–∞–¥—Ä–∞ {frame_number}")
                return None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {gen_response.status_code}")
            print(f"–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {gen_response.text}")
            return None

    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞–¥—Ä–∞ {frame_number}: {e}")
        return None


# –°—Ü–µ–Ω–∞—Ä–∏–π –∫–æ–º–∏–∫—Å–∞ - 4 –∫–∞–¥—Ä–∞
comic_scenes = [
    "–ö–æ–º–∏–∫—Å —Å—Ç–∏–ª—å: –°—É–ø–µ—Ä–≥–µ—Ä–æ–π –≤ —Å–∏–Ω–µ–º –∫–æ—Å—Ç—é–º–µ —Å—Ç–æ–∏—Ç –Ω–∞ –∫—Ä—ã—à–µ –Ω–µ–±–æ—Å–∫—Ä–µ–±–∞, —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –≥–æ—Ä–æ–¥ –Ω–æ—á—å—é, –¥–∏–Ω–∞–º–∏—á–Ω–∞—è –ø–æ–∑–∞, —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞, –∫–æ–º–∏–∫—Å –ø–∞–Ω–µ–ª—å",
    "–ö–æ–º–∏–∫—Å —Å—Ç–∏–ª—å: –°—É–ø–µ—Ä–≥–µ—Ä–æ–π –ª–µ—Ç–∏—Ç –Ω–∞–¥ –≥–æ—Ä–æ–¥–æ–º, —Ä–∞–∑–≤–µ–≤–∞–µ—Ç—Å—è –ø–ª–∞—â, –≤–¥–∞–ª–∏ –≤–∏–¥–Ω—ã –≤—Å–ø—ã—à–∫–∏ –º–æ–ª–Ω–∏–π, —Å—Ç–∏–ª—å –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–≥–æ –∫–æ–º–∏–∫—Å–∞",
    "–ö–æ–º–∏–∫—Å —Å—Ç–∏–ª—å: –ö—Ä—É–ø–Ω—ã–π –ø–ª–∞–Ω –ª–∏—Ü–∞ —Å—É–ø–µ—Ä–≥–µ—Ä–æ—è, —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –º–∞—Å–∫–∞ —Å–∫—Ä—ã–≤–∞–µ—Ç –≥–ª–∞–∑–∞, –¥—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ",
    "–ö–æ–º–∏–∫—Å —Å—Ç–∏–ª—å: –°—É–ø–µ—Ä–≥–µ—Ä–æ–π –ø—Ä–∏–∑–µ–º–ª—è–µ—Ç—Å—è –Ω–∞ —É–ª–∏—Ü–µ, –≤–æ–∫—Ä—É–≥ —Ä–∞–∑–ª–µ—Ç–∞—é—Ç—Å—è –æ–±–ª–æ–º–∫–∏, –∑–ª–æ–¥–µ–π –≤–¥–∞–ª–∏, —ç–∫—à–Ω —Å—Ü–µ–Ω–∞ –∫–æ–º–∏–∫—Å"
]

print("üöÄ –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–º–∏–∫—Å–∞ –∏–∑ 4 –∫–∞–¥—Ä–æ–≤...")
print("=" * 50)

generated_images = []

for i, scene_prompt in enumerate(comic_scenes, 1):
    saved_path = generate_comic_frame(scene_prompt, i)
    if saved_path:
        generated_images.append(saved_path)
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞–¥—Ä {i}")

    # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    if i < len(comic_scenes):
        print("‚è∏Ô∏è  –ü–∞—É–∑–∞ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∫–∞–¥—Ä–æ–º...")
        time.sleep(5)

print("\n" + "=" * 50)
print("üéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–∏–∫—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if generated_images:
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∫–∞–¥—Ä–æ–≤: {len(generated_images)}/{len(comic_scenes)}")
    print("üìÅ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    for img_path in generated_images:
        print(f"   - {os.path.basename(img_path)}")

    print(f"\nüíæ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ: {os.path.abspath(OUTPUT_FOLDER)}")
else:
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–∞–¥—Ä–∞")